.TH "get_test_case" 3 "Version 3" "ASP Schedule Optimizer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
get_test_case
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "dict \fBget_classes\fP (str filename)"
.br
.ti -1c
.RI "dict \fBcreate_sample\fP (dict \fBclasses\fP, int num_semesters, int num_departments, int num_classes)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBcurrent_directory\fP = os\&.path\&.dirname(os\&.path\&.realpath(__file__))"
.br
.ti -1c
.RI "\fBtest_folder_dir\fP = os\&.path\&.split(\fBcurrent_directory\fP)[0]"
.br
.ti -1c
.RI "\fBtest_cases_dir\fP = os\&.path\&.join(\fBtest_folder_dir\fP,'test_cases')"
.br
.ti -1c
.RI "dict \fBclasses\fP = \fBget_classes\fP('filtered\&.json')"
.br
.ti -1c
.RI "dict \fBsample_data\fP = \fBcreate_sample\fP(\fBclasses\fP, 1, 2, 5)"
.br
.ti -1c
.RI "\fBf\fP"
.br
.ti -1c
.RI "\fBindent\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS " dict get_test_case\&.create_sample (dict classes, int num_semesters, int num_departments, int num_classes)"

.PP
Definition at line \fB22\fP of file \fBget_test_case\&.py\fP\&.
.nf
22 def create_sample(classes:dict, num_semesters:int, num_departments:int, num_classes:int) \-> dict:
23     sample_data = {}
24     key_list = list(classes\&.keys())
25     semester_subset = sample(key_list,min(num_semesters,len(key_list)))
26     for semester in semester_subset:
27         sample_data[semester] = {}
28         key_list = list(classes[semester]\&.keys())
29         department_subset = sample(key_list,min(num_departments,len(key_list)))
30         for department in department_subset:
31             key_list = list(classes[semester][department]\&.keys())
32             class_subset = sample(key_list,min(num_classes,len(key_list)))
33             for sample_class in class_subset:
34 
35                 classes[semester][department][sample_class]['sections'] = {
36                     list(classes[semester][department][sample_class]['sections']\&.keys())[0]: list(classes[semester][department][sample_class]['sections']\&.values())[0]
37                     }
38             class_list = {class_name: classes[semester][department][class_name] for class_name in class_subset}
39             sample_data[semester][department] = class_list
40             
41     return sample_data
42 
.PP
.fi

.SS " dict get_test_case\&.get_classes (str filename)"

.PP
Definition at line \fB14\fP of file \fBget_test_case\&.py\fP\&.
.nf
14 def get_classes(filename: str) \-> dict:
15     classes = {}
16 
17     with open(filename, 'r') as f:
18         classes = json\&.load(f)
19         
20     return classes
21 
.PP
.fi

.SH "Variable Documentation"
.PP 
.SS "dict get_test_case\&.classes = \fBget_classes\fP('filtered\&.json')"

.PP
Definition at line \fB49\fP of file \fBget_test_case\&.py\fP\&.
.SS "get_test_case\&.current_directory = os\&.path\&.dirname(os\&.path\&.realpath(__file__))"

.PP
Definition at line \fB6\fP of file \fBget_test_case\&.py\fP\&.
.SS "get_test_case\&.f"

.PP
Definition at line \fB55\fP of file \fBget_test_case\&.py\fP\&.
.SS "get_test_case\&.indent"

.PP
Definition at line \fB55\fP of file \fBget_test_case\&.py\fP\&.
.SS "get_test_case\&.sample_data = \fBcreate_sample\fP(\fBclasses\fP, 1, 2, 5)"

.PP
Definition at line \fB52\fP of file \fBget_test_case\&.py\fP\&.
.SS "get_test_case\&.test_cases_dir = os\&.path\&.join(\fBtest_folder_dir\fP,'test_cases')"

.PP
Definition at line \fB43\fP of file \fBget_test_case\&.py\fP\&.
.SS "get_test_case\&.test_folder_dir = os\&.path\&.split(\fBcurrent_directory\fP)[0]"

.PP
Definition at line \fB12\fP of file \fBget_test_case\&.py\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ASP Schedule Optimizer from the source code\&.
