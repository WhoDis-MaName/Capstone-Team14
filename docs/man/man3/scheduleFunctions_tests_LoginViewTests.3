.TH "scheduleFunctions.tests.LoginViewTests" 3 "Version 3" "ASP Schedule Optimizer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
scheduleFunctions.tests.LoginViewTests
.SH SYNOPSIS
.br
.PP
.PP
Inherits TestCase\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBcheckLoginExists\fP (self)"
.br
.ti -1c
.RI "\fBtestLoginSuccess\fP (self)"
.br
.ti -1c
.RI "\fBtestLoginFail\fP (self)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB7\fP of file \fBtests\&.py\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "scheduleFunctions\&.tests\&.LoginViewTests\&.checkLoginExists ( self)"

.PP
Definition at line \fB8\fP of file \fBtests\&.py\fP\&.
.nf
8     def checkLoginExists(self):
9         response = self\&.client\&.get(reverse(login_name))
10         self\&.assertEqual(response\&.status_code, 200)
11         
.PP
.fi

.SS "scheduleFunctions\&.tests\&.LoginViewTests\&.testLoginFail ( self)"

.PP
Definition at line \fB23\fP of file \fBtests\&.py\fP\&.
.nf
23     def testLoginFail(self):
24         form_data = {
25             'username': 'testUser',
26             'password': 'badPassword',
27             # \&.\&.\&. other fields
28         }
29         response = self\&.client\&.post(reverse(login_name), form_data)
30         self\&.assertEqual(response\&.status_code, 401)
31         \&.\&.\&.
32         
.PP
.fi

.SS "scheduleFunctions\&.tests\&.LoginViewTests\&.testLoginSuccess ( self)"

.PP
Definition at line \fB12\fP of file \fBtests\&.py\fP\&.
.nf
12     def testLoginSuccess(self):
13         form_data = {
14             'username': 'testUser',
15             'password': 'complexpassword',
16             # \&.\&.\&. other fields
17         }
18         response = self\&.client\&.post(reverse(login_name), form_data)
19         self\&.assertEqual(response\&.status_code, 302)
20         self\&.assertEqual(self\&.client\&.session['username'], 'testUser')
21         \&.\&.\&.
22         
.PP
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for ASP Schedule Optimizer from the source code\&.
